#============================================================
distill::create_post("My second blog post...this one will be really good :-)")
    a new partly pre-filled RMarkdown document will open itself in RStudio
    fill it with some text and code as you usually do with RMarkdown documents
    hit “Knit”. NOTE: you’ll need to always “Knit” all changed or created blog-posts individually. It is the only way to update them. “Build Website” would not re-render them for you, because it’s computationally expensive and prone to problems. However, the Distill-Website (we are doing Distill-Blog now) would. You can learn more about the difference between them here.

This new post exists only on your local computer, still not online, thus…

    go to the “Git” tab in RStudio and check all the boxes
    press “Commit”, a new window will pop up
    add description of your commit
    again press “Commit”
    wait until you see the “Close” button and close “Git commit” pop up window
    press “Push”. Pushing will transfer changes in your blog from your local computer to a remote place, namely your Github repository. And since your Github repository is connected to Netlify, this changes will be online after successful push.
    wait until you see the “Close” button and close “Git push” pop up window
    close or ignore the other pop up window
    get back to your blog “better-name.netlify.app” and refresh (it may take a few seconds, so, don’t panic if the first refresh don’t work). You should see a new blog-post.




```{r, layout="l-body-outset", fig.width=6, fig.height=1.5}

```

```{r, layout="l-body-outset"}
paged_table(mtcars)
```

l-body
l-body-outset
l-page
layout="l-screen-inset shaded"
l-screen-inset   /adds 15 px on each side
l-screen

## EXTERNAL FIGURES

If you are including a figure from an external source, it’s good practice to delineate this by applying the external class and adding a caption indicating where it is from. For example:

```{r fig.cap="Figure from https://example.com", out.extra="class=external"}
knitr::include_graphics("images/heatmap.png")


CROSSREFING FIGURES

```{r diamonds, fig.cap="Diamond Prices"}
library(ggplot2)
ggplot(diamonds, aes(carat, price)) + geom_smooth() +
  facet_grid(~ cut)
```

\@ref(fig:diamonds)

====================================================
FOOTNOTES
Footnotes use standard Pandoc markdown notation, for example ^[This will become a hover-able footnote]. The number of the footnote will be automatically generated.This will become a hover-able footnote 1

ASIDE
You can also optionally include notes in the gutter of the article (immediately to the right of the article text). To do this use the <aside> tag.

<aside>
This content will appear in the gutter of the article.
</aside>

This content will appear in the gutter of the article.

FIGURES / ASIDE
You can also include figures in the gutter. Just enclose the code chunk which generates the figure in an <aside> tag:

<aside>
```{r}
ggplot(mtcars, aes(hp, mpg)) + geom_point() + geom_smooth()
```
</aside>

## Acknowledgments {.appendix}

This is a place to recognize people and institutions. It may also be a good place
to acknowledge and cite software that makes your work possible.

## Author Contributions {.appendix}

We strongly encourage you to include an author contributions statement briefly 
describing what each author did.

